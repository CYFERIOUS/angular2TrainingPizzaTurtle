{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\fernossa\\\\Development\\\\routing-start\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\fernossa\\\\Development\\\\routing-start\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\nimport { ServersService } from \"../servers.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servers.service\";\nexport var ServerResolver = /*#__PURE__*/(function () {\n  var ServerResolver = /*#__PURE__*/function () {\n    function ServerResolver(serverService) {\n      _classCallCheck(this, ServerResolver);\n\n      this.serverService = serverService;\n    }\n\n    _createClass(ServerResolver, [{\n      key: \"resolve\",\n      value: function resolve(route, state) {\n        return this.serverService.getServer(+route.params['id']);\n      }\n    }]);\n\n    return ServerResolver;\n  }();\n\n  ServerResolver.ɵfac = function ServerResolver_Factory(t) {\n    return new (t || ServerResolver)(i0.ɵɵinject(i1.ServersService));\n  };\n\n  ServerResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServerResolver,\n    factory: ServerResolver.ɵfac\n  });\n  return ServerResolver;\n})();","map":{"version":3,"sources":["C:/Users/fernossa/Development/routing-start/src/app/servers/server/server-resolver.service.ts"],"names":["ActivatedRouteSnapshot","RouterStateSnapshot","ServersService","i0","i1","ServerResolver","serverService","route","state","getServer","params","ɵfac","ServerResolver_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":";;AAAA,SAASA,sBAAT,EAAiCC,mBAAjC,QAA4D,iBAA5D;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,WAAaC,cAAb;AAAA,MAAaA,cAAb;AACI,4BAAYC,aAAZ,EAA2B;AAAA;;AACvB,WAAKA,aAAL,GAAqBA,aAArB;AACH;;AAHL;AAAA;AAAA,aAII,iBAAQC,KAAR,EAAeC,KAAf,EAAsB;AAClB,eAAO,KAAKF,aAAL,CAAmBG,SAAnB,CAA6B,CAACF,KAAK,CAACG,MAAN,CAAa,IAAb,CAA9B,CAAP;AACH;AANL;;AAAA;AAAA;;AAQAL,EAAAA,cAAc,CAACM,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,WAAO,KAAKA,CAAC,IAAIR,cAAV,EAA0BF,EAAE,CAACW,QAAH,CAAYV,EAAE,CAACF,cAAf,CAA1B,CAAP;AAAmE,GAA9H;;AACAG,EAAAA,cAAc,CAACU,KAAf,GAAuB,aAAcZ,EAAE,CAACa,kBAAH,CAAsB;AAAEC,IAAAA,KAAK,EAAEZ,cAAT;AAAyBa,IAAAA,OAAO,EAAEb,cAAc,CAACM;AAAjD,GAAtB,CAArC;AATA,SAAaN,cAAb;AAAA","sourcesContent":["import { ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\r\nimport { ServersService } from \"../servers.service\";\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../servers.service\";\r\nexport class ServerResolver {\r\n    constructor(serverService) {\r\n        this.serverService = serverService;\r\n    }\r\n    resolve(route, state) {\r\n        return this.serverService.getServer(+route.params['id']);\r\n    }\r\n}\r\nServerResolver.ɵfac = function ServerResolver_Factory(t) { return new (t || ServerResolver)(i0.ɵɵinject(i1.ServersService)); };\r\nServerResolver.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ServerResolver, factory: ServerResolver.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}