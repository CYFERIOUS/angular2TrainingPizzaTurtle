{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\fernossa\\\\Development\\\\routing-start\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\fernossa\\\\Development\\\\routing-start\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nexport var Observable = /*#__PURE__*/(function () {\n  var Observable = /*#__PURE__*/function () {\n    function Observable(subscribe) {\n      _classCallCheck(this, Observable);\n\n      this._isScalar = false;\n\n      if (subscribe) {\n        this._subscribe = subscribe;\n      }\n    }\n\n    _createClass(Observable, [{\n      key: \"lift\",\n      value: function lift(operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n      }\n    }, {\n      key: \"subscribe\",\n      value: function subscribe(observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n\n        if (operator) {\n          sink.add(operator.call(sink, this.source));\n        } else {\n          sink.add(this.source || config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n\n        if (config.useDeprecatedSynchronousErrorHandling) {\n          if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n\n            if (sink.syncErrorThrown) {\n              throw sink.syncErrorValue;\n            }\n          }\n        }\n\n        return sink;\n      }\n    }, {\n      key: \"_trySubscribe\",\n      value: function _trySubscribe(sink) {\n        try {\n          return this._subscribe(sink);\n        } catch (err) {\n          if (config.useDeprecatedSynchronousErrorHandling) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n          }\n\n          if (canReportError(sink)) {\n            sink.error(err);\n          } else {\n            console.warn(err);\n          }\n        }\n      }\n    }, {\n      key: \"forEach\",\n      value: function forEach(next, promiseCtor) {\n        var _this = this;\n\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n          var subscription;\n          subscription = _this.subscribe(function (value) {\n            try {\n              next(value);\n            } catch (err) {\n              reject(err);\n\n              if (subscription) {\n                subscription.unsubscribe();\n              }\n            }\n          }, reject, resolve);\n        });\n      }\n    }, {\n      key: \"_subscribe\",\n      value: function _subscribe(subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n      }\n    }, {\n      key: Symbol_observable,\n      value: function value() {\n        return this;\n      }\n    }, {\n      key: \"pipe\",\n      value: function pipe() {\n        for (var _len = arguments.length, operations = new Array(_len), _key = 0; _key < _len; _key++) {\n          operations[_key] = arguments[_key];\n        }\n\n        if (operations.length === 0) {\n          return this;\n        }\n\n        return pipeFromArray(operations)(this);\n      }\n    }, {\n      key: \"toPromise\",\n      value: function toPromise(promiseCtor) {\n        var _this2 = this;\n\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n          var value;\n\n          _this2.subscribe(function (x) {\n            return value = x;\n          }, function (err) {\n            return reject(err);\n          }, function () {\n            return resolve(value);\n          });\n        });\n      }\n    }]);\n\n    return Observable;\n  }();\n\n  Observable.create = function (subscribe) {\n    return new Observable(subscribe);\n  };\n\n  return Observable;\n})();\n\nfunction getPromiseCtor(promiseCtor) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}","map":{"version":3,"sources":["C:/Users/fernossa/Development/routing-start/node_modules/rxjs/_esm2015/internal/Observable.js"],"names":["canReportError","toSubscriber","observable","Symbol_observable","pipeFromArray","config","Observable","subscribe","_isScalar","_subscribe","operator","source","observerOrNext","error","complete","sink","add","call","useDeprecatedSynchronousErrorHandling","syncErrorThrowable","_trySubscribe","syncErrorThrown","syncErrorValue","err","console","warn","next","promiseCtor","getPromiseCtor","resolve","reject","subscription","value","unsubscribe","subscriber","operations","length","x","create","Promise","Error"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,uBAA/B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,UAAU,IAAIC,iBAAvB,QAAgD,qBAAhD;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,WAAaC,UAAb;AAAA,MAAaA,UAAb;AACI,wBAAYC,SAAZ,EAAuB;AAAA;;AACnB,WAAKC,SAAL,GAAiB,KAAjB;;AACA,UAAID,SAAJ,EAAe;AACX,aAAKE,UAAL,GAAkBF,SAAlB;AACH;AACJ;;AANL;AAAA;AAAA,aAOI,cAAKG,QAAL,EAAe;AACX,YAAMR,UAAU,GAAG,IAAII,UAAJ,EAAnB;AACAJ,QAAAA,UAAU,CAACS,MAAX,GAAoB,IAApB;AACAT,QAAAA,UAAU,CAACQ,QAAX,GAAsBA,QAAtB;AACA,eAAOR,UAAP;AACH;AAZL;AAAA;AAAA,aAaI,mBAAUU,cAAV,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA2C;AACvC,YAAQJ,QAAR,GAAqB,IAArB,CAAQA,QAAR;AACA,YAAMK,IAAI,GAAGd,YAAY,CAACW,cAAD,EAAiBC,KAAjB,EAAwBC,QAAxB,CAAzB;;AACA,YAAIJ,QAAJ,EAAc;AACVK,UAAAA,IAAI,CAACC,GAAL,CAASN,QAAQ,CAACO,IAAT,CAAcF,IAAd,EAAoB,KAAKJ,MAAzB,CAAT;AACH,SAFD,MAGK;AACDI,UAAAA,IAAI,CAACC,GAAL,CAAS,KAAKL,MAAL,IAAgBN,MAAM,CAACa,qCAAP,IAAgD,CAACH,IAAI,CAACI,kBAAtE,GACL,KAAKV,UAAL,CAAgBM,IAAhB,CADK,GAEL,KAAKK,aAAL,CAAmBL,IAAnB,CAFJ;AAGH;;AACD,YAAIV,MAAM,CAACa,qCAAX,EAAkD;AAC9C,cAAIH,IAAI,CAACI,kBAAT,EAA6B;AACzBJ,YAAAA,IAAI,CAACI,kBAAL,GAA0B,KAA1B;;AACA,gBAAIJ,IAAI,CAACM,eAAT,EAA0B;AACtB,oBAAMN,IAAI,CAACO,cAAX;AACH;AACJ;AACJ;;AACD,eAAOP,IAAP;AACH;AAjCL;AAAA;AAAA,aAkCI,uBAAcA,IAAd,EAAoB;AAChB,YAAI;AACA,iBAAO,KAAKN,UAAL,CAAgBM,IAAhB,CAAP;AACH,SAFD,CAGA,OAAOQ,GAAP,EAAY;AACR,cAAIlB,MAAM,CAACa,qCAAX,EAAkD;AAC9CH,YAAAA,IAAI,CAACM,eAAL,GAAuB,IAAvB;AACAN,YAAAA,IAAI,CAACO,cAAL,GAAsBC,GAAtB;AACH;;AACD,cAAIvB,cAAc,CAACe,IAAD,CAAlB,EAA0B;AACtBA,YAAAA,IAAI,CAACF,KAAL,CAAWU,GAAX;AACH,WAFD,MAGK;AACDC,YAAAA,OAAO,CAACC,IAAR,CAAaF,GAAb;AACH;AACJ;AACJ;AAlDL;AAAA;AAAA,aAmDI,iBAAQG,IAAR,EAAcC,WAAd,EAA2B;AAAA;;AACvBA,QAAAA,WAAW,GAAGC,cAAc,CAACD,WAAD,CAA5B;AACA,eAAO,IAAIA,WAAJ,CAAgB,UAACE,OAAD,EAAUC,MAAV,EAAqB;AACxC,cAAIC,YAAJ;AACAA,UAAAA,YAAY,GAAG,KAAI,CAACxB,SAAL,CAAe,UAACyB,KAAD,EAAW;AACrC,gBAAI;AACAN,cAAAA,IAAI,CAACM,KAAD,CAAJ;AACH,aAFD,CAGA,OAAOT,GAAP,EAAY;AACRO,cAAAA,MAAM,CAACP,GAAD,CAAN;;AACA,kBAAIQ,YAAJ,EAAkB;AACdA,gBAAAA,YAAY,CAACE,WAAb;AACH;AACJ;AACJ,WAVc,EAUZH,MAVY,EAUJD,OAVI,CAAf;AAWH,SAbM,CAAP;AAcH;AAnEL;AAAA;AAAA,aAoEI,oBAAWK,UAAX,EAAuB;AACnB,YAAQvB,MAAR,GAAmB,IAAnB,CAAQA,MAAR;AACA,eAAOA,MAAM,IAAIA,MAAM,CAACJ,SAAP,CAAiB2B,UAAjB,CAAjB;AACH;AAvEL;AAAA,WAwEK/B,iBAxEL;AAAA,aAwEI,iBAAsB;AAClB,eAAO,IAAP;AACH;AA1EL;AAAA;AAAA,aA2EI,gBAAoB;AAAA,0CAAZgC,UAAY;AAAZA,UAAAA,UAAY;AAAA;;AAChB,YAAIA,UAAU,CAACC,MAAX,KAAsB,CAA1B,EAA6B;AACzB,iBAAO,IAAP;AACH;;AACD,eAAOhC,aAAa,CAAC+B,UAAD,CAAb,CAA0B,IAA1B,CAAP;AACH;AAhFL;AAAA;AAAA,aAiFI,mBAAUR,WAAV,EAAuB;AAAA;;AACnBA,QAAAA,WAAW,GAAGC,cAAc,CAACD,WAAD,CAA5B;AACA,eAAO,IAAIA,WAAJ,CAAgB,UAACE,OAAD,EAAUC,MAAV,EAAqB;AACxC,cAAIE,KAAJ;;AACA,UAAA,MAAI,CAACzB,SAAL,CAAe,UAAC8B,CAAD;AAAA,mBAAOL,KAAK,GAAGK,CAAf;AAAA,WAAf,EAAiC,UAACd,GAAD;AAAA,mBAASO,MAAM,CAACP,GAAD,CAAf;AAAA,WAAjC,EAAuD;AAAA,mBAAMM,OAAO,CAACG,KAAD,CAAb;AAAA,WAAvD;AACH,SAHM,CAAP;AAIH;AAvFL;;AAAA;AAAA;;AAyFA1B,EAAAA,UAAU,CAACgC,MAAX,GAAoB,UAAC/B,SAAD,EAAe;AAC/B,WAAO,IAAID,UAAJ,CAAeC,SAAf,CAAP;AACH,GAFD;;AAzFA,SAAaD,UAAb;AAAA;;AA4FA,SAASsB,cAAT,CAAwBD,WAAxB,EAAqC;AACjC,MAAI,CAACA,WAAL,EAAkB;AACdA,IAAAA,WAAW,GAAGtB,MAAM,CAACkC,OAAP,IAAkBA,OAAhC;AACH;;AACD,MAAI,CAACZ,WAAL,EAAkB;AACd,UAAM,IAAIa,KAAJ,CAAU,uBAAV,CAAN;AACH;;AACD,SAAOb,WAAP;AACH","sourcesContent":["import { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nexport class Observable {\n    constructor(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const { operator } = this;\n        const sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let subscription;\n            subscription = this.subscribe((value) => {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        return source && source.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => value = x, (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n"]},"metadata":{},"sourceType":"module"}